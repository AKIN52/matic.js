(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[381],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1046:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var o=n(2122),a=n(9756),r=(n(7294),n(3905)),i=["components"],c={sidebar_position:1,title:"Introduction",slug:"/"},s=void 0,l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"The @matic.js client library makes it easy for developers, who may not be deeply familiar with smart contract development, to interact with the various components of Matic Network.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/",permalink:"/matic.js/docs/",editUrl:"https://github.com/maticnetwork/matic.js/edit/master/docs/docs/intro.mdx",version:"current",lastUpdatedBy:"ujjwalgupta94",lastUpdatedAt:1625658563,formattedLastUpdatedAt:"7/7/2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction",slug:"/"},sidebar:"docs",next:{title:"Installation",permalink:"/matic.js/docs/basic/environment-setup"}},p=[{value:"Quick Setup",id:"quick-setup",children:[]}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic.js/"},(0,r.kt)("inlineCode",{parentName:"a"},"@matic.js"))," client library makes it easy for developers, who may not be deeply familiar with smart contract development, to interact with the various components of Matic Network."),(0,r.kt)("h3",{id:"quick-setup"},"Quick Setup"),(0,r.kt)("p",null,"Install the maticjs package via npm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install --save @maticnetwork/maticjs\n$ npm i --save @maticnetwork/meta\n")),(0,r.kt)("p",null,"Now we have two options either use ",(0,r.kt)("strong",{parentName:"p"},"PoS")," or ",(0,r.kt)("strong",{parentName:"p"},"Plasma"),".\nThe default maticjs returns the Plasma client."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Plasma Client\nconst Matic = require("@maticnetwork/maticjs");\n// We can get Pos client by adding .MaticPOSClient\nconst MaticPoSClient = require("@maticnetwork/maticjs").MaticPOSClient;\n')),(0,r.kt)("p",null,"You will also need to create another file config.json. This will contain all configuration related to Matic.js."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "MATIC_PROVIDER": "https://rpc-mumbai.matic.today", \n    "PARENT_PROVIDER": "https://goerli.infura.io/v3/75aa7935112647bc8cc49d20beafa189", \n    "ROOTCHAIN_ADDRESS": "0x2890bA17EfE978480615e330ecB65333b880928e", \n    "WITHDRAWMANAGER_ADDRESS": "0x2923C8dD6Cdf6b2507ef91de74F1d5E0F11Eac53", \n    "DEPOSITMANAGER_ADDRESS": "0x7850ec290A2e2F40B82Ed962eaf30591bb5f5C96",  \n    "PRIVATE_KEY": "your_pvt_key", // Append 0x to your private key\n    "FROM_ADDRESS": "your address",\n    "GOERLI_ERC20": "0xb2eda8A855A4176B7f8758E0388b650BcB1828a4", \n    "MATIC_ERC20": "0xc7bb71b405ea25A9251a1ea060C2891b84BE1929", \n    "REGISTRY": "0xeE11713Fe713b2BfF2942452517483654078154D",\n    "MUMBAI_ERC721":"0xa38c6F7FEaB941160f32DA7Bbc8a4897b37876b5",\n    "GOERLI_ERC721":"0x0217B02596Dfe39385946f82Aab6A92509b7F352",\n    "MUMBAI_WETH":"0x4DfAe612aaCB5b448C12A591cD0879bFa2e51d62",\n    "GOERLI_WETH":"0x60D4dB9b534EF9260a88b0BED6c486fe13E604Fc"\n  }\n')),(0,r.kt)("p",null,"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"maticProvider")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ethereumProvider")," as it will be needed later."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const maticProvider = new WalletConnectProvider({\n  host: config.MATIC_RPC,\n  callbacks: {\n    onConnect: console.log("matic connected"),\n    onDisconnect: console.log("matic disconnected!"),\n  },\n});\n\nconst ethereumProvider = new WalletConnectProvider({\n  host: config.ETHEREUM_RPC,\n  callbacks: {\n    onConnect: console.log("mainchain connected"),\n    onDisconnect: console.log("mainchain disconnected"),\n  },\n});\n\n')),(0,r.kt)("p",null,"Create these functions to directly call in API using provider."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// posClientGeneral facilitates the operations like approve, deposit, exit\nconst posClientParent = () => {\n  const maticPoSClient = new MaticPoSClient({\n    network: config.NETWORK,\n    version: config.VERSION,\n    maticProvider: maticProvider,\n    parentProvider: window.web3,\n    parentDefaultOptions: { from: account },\n    maticDefaultOptions: { from: account },\n  });\n  return maticPoSClient;\n};\n// posclientBurn facilitates the burning of tokens on the matic chain\nconst posClientChild = () => {\n  const maticPoSClient = new MaticPoSClient({\n    network: config.NETWORK,\n    version: config.VERSION,\n    maticProvider: window.web3,\n    parentProvider: ethereumprovider,\n    parentDefaultOptions: { from: account },\n    maticDefaultOptions: { from: account },\n  });\n  return maticPoSClient;\n};\n// getMaticPlasmaClient facilitates the burning of tokens on the matic chain\nconst getMaticPlasmaParent = async (\n  _network = config.NETWORK,\n  _version = config.VERSION\n) => {\n  const network = new Network(_network, _version);\n  const matic = new Matic({\n    network: _network,\n    version: _version,\n    parentProvider: window.web3,\n    maticProvider: maticProvider,\n    parentDefaultOptions: { from: account },\n    maticDefaultOptions: { from: account },\n  });\n  await matic.initialize();\n  return { matic, network };\n};\n\n// getMaticPlasmaClientBurn facilitates the operations like approve, deposit,confirmWithdraw ,exit\nconst getMaticPlasmaChild = async (\n  _network = config.NETWORK,\n  _version = config.VERSION\n) => {\n  const matic = new Matic({\n    network: _network,\n    version: _version,\n    parentProvider: ethereumprovider,\n    maticProvider: window.web3,\n    parentDefaultOptions: { from: account },\n    maticDefaultOptions: { from: account },\n  });\n  await matic.initialize();\n  return { matic };\n};\n")),(0,r.kt)("p",null,"Now we can call api methods on these instance for example.\nMore of these API are covered in PoS API and Plasma APi."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Eg POS ERC20 functionality\nconst depositERC20 = async () => {\n  const maticPoSClient = posClientParent();\n  const x = inputValue * 1000000000000000000; // 18 decimals\n  const x1 = x.toString();\n  await maticPoSClient.approveERC20ForDeposit(config.posRootERC20, x1, {\n    from: account,\n  });\n  await maticPoSClient.depositERC20ForUser(config.posRootERC20, account, x1, {\n    from: account,\n  });\n};\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Never store your private key in code on production\u200a\u2014\u200athis is added in the config.js file for illustration purposes. Typically a user\u2019s private key will be stored in a browser wallet such as Metamask or a mobile wallet such as the Matic wallet, Status or a hardware wallet.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you wish to directly refer a set of code examples, you can do so at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maticnetwork/matic.js/tree/master/examples"},"https://github.com/maticnetwork/matic.js/tree/master/examples"))))}m.isMDXComponent=!0}}]);