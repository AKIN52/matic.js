(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[112],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1917:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:10},l=void 0,u={unversionedId:"api/transferERC721Tokens",id:"api/transferERC721Tokens",isDocsHomePage:!1,title:"transferERC721Tokens",description:"matic.transferERC721Tokens(token, user, tokenId, options)",source:"@site/docs/api/transferERC721Tokens.md",sourceDirName:"api",slug:"/api/transferERC721Tokens",permalink:"/docs/api/transferERC721Tokens",editUrl:"https://github.com/maticnetwork/matic.js/edit/master/docs/docs/api/transferERC721Tokens.md",version:"current",lastUpdatedBy:"ujjwalgupta94",lastUpdatedAt:1625227160,formattedLastUpdatedAt:"7/2/2021",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"docs",previous:{title:"transferERC20Tokens",permalink:"/docs/api/transferERC20Tokens"},next:{title:"getTransferSignature",permalink:"/docs/api/getTransferSignature"}},p=[{value:"matic.transferERC721Tokens(token, user, tokenId, options)",id:"matictransfererc721tokenstoken-user-tokenid-options",children:[]}],c={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"matictransfererc721tokenstoken-user-tokenid-options"},"matic.transferERC721Tokens(token, user, tokenId, options)"),(0,a.kt)("p",null,"Transfer given ",(0,a.kt)("inlineCode",{parentName:"p"},"tokenId")," of ",(0,a.kt)("inlineCode",{parentName:"p"},"token")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"user"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"token")," must be valid ERC721 token address"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"user")," must be value account address"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenId")," must be token amount in wei (string, not in Number)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options")," see ",(0,a.kt)("a",{parentName:"li",href:"#approveERC20TokensForDeposit"},"more infomation here"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parent")," must be boolean value. For token transfer on Main chain, use ",(0,a.kt)("inlineCode",{parentName:"li"},"parent: true")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"encodeAbi")," must be boolean value. For Byte code of transaction, use ",(0,a.kt)("inlineCode",{parentName:"li"},"encodeAbi: true"))))),(0,a.kt)("p",null,"This returns ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," object, which will be fulfilled when transaction gets confirmed (when receipt is generated)."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const user = <your-address> or <any-account-address>\n\nmatic.transferERC721Tokens('0x718Ca123...', user, '100006500000000000000', {\n  from: '0xABc578455...',\n\n  // For token transfer on Main network\n  // parent: true\n})\n")),(0,a.kt)("hr",null))}m.isMDXComponent=!0}}]);