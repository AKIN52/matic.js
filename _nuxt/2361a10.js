(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{217:function(e,t,o){"use strict";o.r(t);var n={components:{Layout:o(172).a}},r=o(14),component=Object(r.a)(n,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("Layout",{attrs:{title:"undefined",description:"undefined",keywords:"undefined",contentSrc:"/home/runner/work/matic.js/matic.js/docs/content/docs/plasma/erc721/startWithdrawForNFT.md"}},[o("h1",{attrs:{id:"startwithdrawfornft"}},[e._v("Start Withdraw For NFT")]),e._v(" "),o("pre",[o("code",{staticClass:"js language-js"},[e._v("matic.startWithdrawForNFT(token, tokenId, options)\n")])]),e._v(" "),o("p",[e._v("Start withdraw process with given "),o("code",[e._v("tokenId")]),e._v(" for "),o("code",[e._v("token")]),e._v(".")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("token")]),e._v(" must be valid ERC721 token address")]),e._v(" "),o("li",[o("code",[e._v("tokenId")]),e._v(" must be token tokenId (string, not in Number)")]),e._v(" "),o("li",[o("code",[e._v("options")]),e._v(" see "),o("a",{attrs:{href:"#approveERC20TokensForDeposit"}},[e._v("more infomation here")])]),e._v(" "),o("li",[o("code",[e._v("encodeAbi")]),e._v(" must be boolean value. For Byte code of transaction, use "),o("code",[e._v("encodeAbi: true")])])]),e._v(" "),o("p",[e._v("This returns "),o("code",[e._v("Promise")]),e._v(" object, which will be fulfilled when transaction gets confirmed (when receipt is generated).")]),e._v(" "),o("p",[e._v("Example:")]),e._v(" "),o("pre",[o("code",{staticClass:"js language-js"},[e._v("matic.startWithdrawForNFT('0x718Ca123...', '1000000000000000000', {\n  from: '0xABc578455...',\n})\n")])]),e._v(" "),o("hr")])}),[],!1,null,null,null);t.default=component.exports}}]);