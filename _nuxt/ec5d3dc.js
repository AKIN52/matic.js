(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{235:function(e,o,t){"use strict";t.r(o);var n={components:{Layout:t(175).a}},r=t(14),component=Object(r.a)(n,(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("Layout",{attrs:{title:"undefined",description:"undefined",keywords:"undefined",contentSrc:"/home/runner/work/matic.js/matic.js/docs/content/docs/pos/ERC721/approveERC721ForDeposit.md"}},[t("h1",{attrs:{id:"approveerc721deposit"}},[e._v("Approve ERC721 Deposit")]),e._v(" "),t("pre",[t("code",{staticClass:"js language-js"},[e._v("maticPOSClient.approveERC721ForDeposit(rootToken, tokenId, options)\n")])]),e._v(" "),t("p",[e._v("Approve ERC721 tokens for deposit using POS Portal")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("rootToken")]),e._v(" must be valid ERC721 token address")]),e._v(" "),t("li",[t("code",[e._v("tokenId")]),e._v(" tokenId for approval (string, not in Number)")]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" transaction fields, can be skipped if default options are set")]),e._v(" "),t("li",[t("code",[e._v("from")]),e._v(" must be boolean value. For Byte code of transaction, use "),t("code",[e._v("from: true")])]),e._v(" "),t("li",[t("code",[e._v("encodeAbi")]),e._v(" must be boolean value. For Byte code of transaction, use "),t("code",[e._v("encodeAbi: true")])])]),e._v(" "),t("p",[e._v("This returns "),t("code",[e._v("Promise")]),e._v(" object, which will be fulfilled when transaction gets confirmed (when receipt is generated).")]),e._v(" "),t("p",[e._v("Example:")]),e._v(" "),t("pre",[t("code",{staticClass:"js language-js"},[e._v("await maticPOSClient.approveERC721ForDeposit(\n  '0x....', // RootToken address,\n  '123', // tokenId for approval\n  {\n    from: config.user.address,\n    gasPrice: '500000000000',\n    gas: 2500000,\n  } // transaction fields, can be skipped if default options are set\n)\n")])]),e._v(" "),t("hr")])}),[],!1,null,null,null);o.default=component.exports}}]);