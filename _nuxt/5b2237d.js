(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{201:function(t,e,n){"use strict";n.r(e);var r={components:{Layout:n(176).a}},o=n(14),component=Object(o.a)(r,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("Layout",{attrs:{title:"Get started",description:"Get started with maticjs",keywords:"maticjs, introduction, contract, polygon, sdk",contentSrc:"/home/runner/work/matic.js/matic.js/content/docs/get-started.md"}},[n("h1",{attrs:{id:"getstarted"}},[t._v("Get Started")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("@matic.js")]),t._v(" is a javascript library which helps in interacting with the various components of Matic Network.")]),t._v(" "),n("p",[t._v("In this Get Started tutorial - we will learn about how we can setup and interact with the POS bridge.")]),t._v(" "),n("h2",{attrs:{id:"installation"}},[t._v("Installation")]),t._v(" "),n("p",[n("strong",[t._v("Install the maticjs package via npm:")])]),t._v(" "),n("pre",[n("code",{staticClass:"bash language-bash"},[t._v("npm install @maticnetwork/maticjs\n")])]),t._v(" "),n("p",[n("strong",[t._v("Install the web3js plugin")])]),t._v(" "),n("pre",[n("code",{staticClass:"bash language-bash"},[t._v("npm install @maticnetwork/maticjs-web3\n")])]),t._v(" "),n("h2",{attrs:{id:"setup"}},[t._v("Setup")]),t._v(" "),n("pre",[n("code",{staticClass:"javascript language-javascript"},[t._v("import { use } from '@maticnetwork/maticjs'\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3'\n\n// install web3 plugin\nuse(Web3ClientPlugin)\n")])]),t._v(" "),n("p",[t._v("In the above code we are initiating maticjs with "),n("code",[t._v("web3js")]),t._v(" but you can also similarly initiate with "),n("a",{attrs:{href:"docs/setup/ethers"}},[t._v("ethers")]),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"posclient"}},[t._v("POS client")]),t._v(" "),n("p",[n("code",[t._v("POSClient")]),t._v(" helps us to interact with POS Bridge.")]),t._v(" "),n("pre",[n("code",[t._v("import { POSClient,use } from \"@maticnetwork/maticjs\"\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3'\nimport HDWalletProvider from \"@truffle/hdwallet-provider\"\n\n// install web3 plugin\nuse(Web3ClientPlugin);\n\nconst posClient = new POSClient();\nawait posClient.init({\n    network: 'testnet',\n    version: 'mumbai',\n    parent: {\n      provider: new HDWalletProvider(privateKey, mainRPC),\n      defaultConfig: {\n        from : fromAddress\n      }\n    },\n    child: {\n      provider: new HDWalletProvider(privateKey, childRPC),\n      defaultConfig: {\n        from : fromAddress\n      }\n    }\n});\n")])]),t._v(" "),n("p",[t._v("After "),n("code",[t._v("POSClient")]),t._v(" is initiated, we need to initiate the required token types like - "),n("code",[t._v("erc20")]),t._v(", "),n("code",[t._v("erc721")]),t._v(" etc.")]),t._v(" "),n("p",[t._v("Let's initiate "),n("code",[t._v("erc20")]),t._v(" -")]),t._v(" "),n("h3",{attrs:{id:"erc20"}},[t._v("erc20")]),t._v(" "),n("p",[n("strong",[t._v("create erc20 child token")])]),t._v(" "),n("pre",[n("code",[t._v("const erc20ChildToken = posClient.erc20(<token address>);\n")])]),t._v(" "),n("p",[n("strong",[t._v("create erc20 parent token")])]),t._v(" "),n("pre",[n("code",[t._v("const erc20ParentToken = posClient.erc20(<token address>, true);\n")])]),t._v(" "),n("p",[t._v("Once erc20 is initaited, you can call various methods that are available, like - "),n("code",[t._v("getBalance")]),t._v(", "),n("code",[t._v("approve")]),t._v(", "),n("code",[t._v("deposit")]),t._v(" , "),n("code",[t._v("withdraw")]),t._v(" etc.")]),t._v(" "),n("p",[t._v("Let's see some of the API examples -")]),t._v(" "),n("h4",{attrs:{id:"getbalance"}},[t._v("get balance")]),t._v(" "),n("pre",[n("code",[t._v("const balance = await erc20ChildToken.getBalance(<userAddress>)\nconsole.log('balance', balance)\n")])]),t._v(" "),n("h4",{attrs:{id:"approve"}},[t._v("approve")]),t._v(" "),n("pre",[n("code",[t._v("// approve amount 10 on parent token\nconst approveResult = await erc20ParentToken.approve(10);\n\n// get transaction hash\nconst txHash = await approveResult.getTransactionHash();\n\n// get transaction receipt\nconst txReceipt = await approveResult.getReceipt();\n")])]),t._v(" "),n("div",{staticClass:"mt-20px mb-20px top-border"}),t._v(" "),n("p",[t._v("As you can see, with its simple APIs maticjs makes it very easy to interact with maticjs bridge. "),n("strong",[t._v("Let's get started with creating something awesome")])]),t._v(" "),n("h3",{attrs:{id:"someimportantlinks"}},[t._v("Some important links")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/maticnetwork/matic.js/tree/master/examples"}},[t._v("Examples")])])])])}),[],!1,null,null,null);e.default=component.exports}}]);