(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{234:function(e,t,n){"use strict";n.r(t);var o={components:{Layout:n(175).a}},r=n(14),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",{attrs:{title:"undefined",description:"undefined",keywords:"undefined",contentSrc:"/home/runner/work/matic.js/matic.js/docs/content/docs/pos/ERC20/exitERC20.md"}},[n("h1",{attrs:{id:"exiterc20"}},[e._v("Exit ERC20")]),e._v(" "),n("pre",[n("code",{staticClass:"js language-js"},[e._v("maticPOSClient.exitERC20(burnTxHash, options)\n")])]),e._v(" "),n("p",[e._v("Exit tokens from POS Portal. This can be called after checkpoint has been submitted for the block containing burn tx.")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("burnTxHash")]),e._v(" must be valid tx hash for token burn using "),n("a",{attrs:{href:"#pos-burnERC20"}},[e._v("burnERC20")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("options")]),e._v(" see "),n("a",{attrs:{href:"#approveERC20TokensForDeposit"}},[e._v("more infomation here")])])]),e._v(" "),n("p",[e._v("This returns "),n("code",[e._v("Promise")]),e._v(" object, which will be fulfilled when transaction gets confirmed (when receipt is generated).")]),e._v(" "),n("p",[e._v("Example:")]),e._v(" "),n("pre",[n("code",{staticClass:"js language-js"},[e._v("maticPOSClient.exitERC20('0xabcd...789', {\n  from: '0xABc578455...',\n})\n")])]),e._v(" "),n("hr")])}),[],!1,null,null,null);t.default=component.exports}}]);