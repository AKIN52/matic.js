(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{223:function(t,e,n){"use strict";n.r(e);var r={components:{Layout:n(174).a}},o=n(14),component=Object(o.a)(r,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("Layout",{attrs:{title:"undefined",description:"undefined",keywords:"undefined",contentSrc:"/home/runner/work/matic.js/matic.js/docs/content/docs/plasma/WithdrawManager/startExitForMetadataMintableBurntToken.md"}},[n("h1",{attrs:{id:"exitmetadatamintableburnttokens"}},[t._v("Exit Metadata Mintable Burnt Tokens")]),t._v(" "),n("pre",[n("code",{staticClass:"js language-js"},[t._v("matic.withdrawManager.startExitForMetadataMintableBurntToken(burnTxHash, (predicate: address), options)\n")])]),t._v(" "),n("pre",[n("code",{staticClass:"bash language-bash"},[t._v("/**\n  * Start an exit for a token with metadata (token uri) that was minted and burnt on the side chain\n  * Wrapper over contract call: MintableERC721Predicate.startExitForMetadataMintableBurntToken\n  * @param burnTxHash Hash of the burn transaction on Matic\n  * @param predicate address of MintableERC721Predicate\n  */\n")])]),t._v(" "),n("p",[t._v("See "),n("a",{attrs:{href:"https://github.com/maticnetwork/contracts/blob/e2cb462b8487921463090b0bdcdd7433db14252b/contracts/root/predicates/MintableERC721Predicate.sol#L66"}},[t._v("MintableERC721Predicate.startExitForMetadataMintableBurntToken")])]),t._v(" "),n("pre",[n("code",{staticClass:"js language-js"},[t._v("const burn = await this.maticClient.startWithdrawForNFT(childErc721.address, tokenId)\nawait this.maticClient.withdrawManager.startExitForMetadataMintableBurntToken(burn.transactionHash, predicate.address)\n")])]),t._v(" "),n("hr")])}),[],!1,null,null,null);e.default=component.exports}}]);